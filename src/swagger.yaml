openapi: 3.0.0
info:
  title: WhatsApp Bridge API
  description: Private WhatsApp Web API Bridge for automated messaging and interactions
  version: 1.0.0
  contact:
    name: API Support

servers:
  - url: http://localhost:3000
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
    
    Status:
      type: object
      properties:
        authenticated:
          type: boolean
          description: Whether the client is authenticated
        initialized:
          type: boolean
          description: Whether the client is initialized
        state:
          type: string
          description: Current client state
        timestamp:
          type: integer
          description: Timestamp of the status check

    Message:
      type: object
      properties:
        chatId:
          type: string
          description: The chat ID to send the message to
        message:
          type: string
          description: The message text
        mediaUrl:
          type: string
          description: Optional URL for media attachment
    
    MessageResponse:
      type: object
      properties:
        messageId:
          type: string
          description: ID of the sent message
        timestamp:
          type: integer
          description: Message timestamp
        status:
          type: string
          description: Message status (e.g., 'sent')
        from:
          type: string
          description: Sender's ID
        to:
          type: string
          description: Recipient's ID

    Chat:
      type: object
      properties:
        id:
          type: string
          description: Chat ID
        name:
          type: string
          description: Chat name or contact name
        isGroup:
          type: boolean
          description: Whether this is a group chat
        timestamp:
          type: integer
          description: Last message timestamp
    
    Subscription:
      type: object
      required:
        - url
        - events
        - secret
      properties:
        url:
          type: string
          description: Webhook URL to receive events
        events:
          type: array
          items:
            type: string
            enum: [message, message_create, message_ack, group_join, group_leave, group_update]
          description: List of events to subscribe to
        secret:
          type: string
          description: Secret key used to authenticate webhook calls

security:
  - BearerAuth: []

paths:
  /auth/status:
    get:
      summary: Get client status
      description: Get the current status of the WhatsApp client
      responses:
        '200':
          description: Current client status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /messages:
    post:
      tags:
        - Messages
      summary: Send message
      description: Send a message to a WhatsApp chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
    get:
      tags:
        - Messages
      summary: Get messages from a chat
      parameters:
        - name: chatId
          in: query
          required: true
          schema:
            type: string
          description: ID of the chat to get messages from
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          description: Maximum number of messages to retrieve
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Missing chat ID
        '401':
          description: Unauthorized

  /messages/{messageId}/reply:
    post:
      tags:
        - Messages
      summary: Reply to a message
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          description: ID of the message to reply to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  description: Reply message content
                mediaUrl:
                  type: string
                  description: Optional URL for media attachment
      responses:
        '200':
          description: Reply sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Missing required fields
        '404':
          description: Message not found

  /messages/{messageId}/react:
    post:
      tags:
        - Messages
      summary: React to a message
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          description: ID of the message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reaction
              properties:
                reaction:
                  type: string
                  description: Emoji reaction
      responses:
        '200':
          description: Reaction added successfully
        '400':
          description: Missing reaction emoji
        '404':
          description: Message not found

  /messages/{messageId}:
    delete:
      tags:
        - Messages
      summary: Delete a message
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          description: ID of the message to delete
        - name: everyone
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Whether to delete for everyone or just for me
      responses:
        '200':
          description: Message deleted successfully
        '404':
          description: Message not found

  /messages/{messageId}/media:
    get:
      tags:
        - Messages
      summary: Download message media
      description: Download media from a message
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
          description: ID of the message containing media
      responses:
        '200':
          description: Media file
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Message has no media
        '404':
          description: Message or media not found

  /chats:
    get:
      tags:
        - Chats
      summary: List all chats
      description: Get a list of all WhatsApp chats
      responses:
        '200':
          description: List of chats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
        '401':
          description: Unauthorized

  /chats/{chatId}:
    get:
      tags:
        - Chats
      summary: Get chat details
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
          description: ID of the chat
      responses:
        '200':
          description: Chat details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '404':
          description: Chat not found

  /subscriptions:
    post:
      tags:
        - Webhooks
      summary: Create webhook subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '201':
          description: Subscription created successfully
        '400':
          description: Invalid request parameters
    get:
      tags:
        - Webhooks
      summary: List all subscriptions
      responses:
        '200':
          description: List of active subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'

  /subscriptions/{id}:
    delete:
      tags:
        - Webhooks
      summary: Delete a subscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the subscription to delete
      responses:
        '200':
          description: Subscription removed successfully
        '404':
          description: Subscription not found